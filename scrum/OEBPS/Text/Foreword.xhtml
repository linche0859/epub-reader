<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body data-cfi="/4" class="calibre">
  <h1 data-cfi="/4/2" class="calibre1"><span class="num" data-cfi="/4/2/2">前言</span>為何要談Scrum？</h1>

  <p data-cfi="/4/4" class="calibre2">我在二十年前和肯．施瓦布（Ken Schwaber）一起開發Scrum，當時的用意是要為科技業設想一套更快速、更可靠、更有效的軟體開發手法。從那時候直到至少2005年，大多數的軟體開發專案都還是採用瀑布法，專案分成多個階段完成，一個又一個階段發展出準備釋出給顧客或軟體使用者的終極版。那樣的流程很緩慢，也無法預知成果，而且往往會做出使用者並不想要或不願付費購買的產品。進度延遲幾個月或幾年是家常便飯。這種事前先把每一步都規劃好的計畫，會把所有細節都畫成甘特圖，也讓管理高層相信開發的過程完全在掌控中，但結果往往是進度很快就開始落後，而且預算嚴重超支。</p>

  <p data-cfi="/4/6" class="calibre2">為了免除這些缺失，我在1993年想出一種做事的新方法：Scrum。它徹底改變過去那種由上而下、規範式的專案管理手法。相較之下，Scrum可說是一種具備進化能力、有彈性、還能自我修正的制度。自問世以來，Scrum架構已經成為科技業發展新軟體與新產品的一種方式。不過，Scrum固然在矽谷已經有管理軟硬體專案方面的口碑，但在一般商業應用上有何潛能仍是未知數。就是因為這樣，我才會撰寫這本書，為科技業以外的企業介紹Scrum這套管理系統。</p>

  <p data-cfi="/4/8" class="calibre2">我在書中會提及，Scrum源自於豐田生產系統（Toyota Production System），以及空戰的OODA循環。我會介紹我們如何把小團隊當成專案運作的核心，還有為何它能發揮這麼高的作業效率，也會說明我們如何安排專案的優先順序；如何設定為期一週至一個月的「衝刺」（Sprint），以維持動能並讓團隊的每個成員承擔應有的責任；如何進行簡短的每日立會（Daily Stand-up meeting）來追蹤已完成事項；以及在所難免會突然出現的各種挑戰。</p>

  <p data-cfi="/4/10" class="calibre2">我也會談到Scrum如何結合「持續改善」與「最低限度可行產品」的概念，藉以從顧客那裡獲取即時的回饋意見，而不是等到產品完成後才做這件事。你會在接下來的內容中看到，從開發價格實惠、每加侖汽油能跑一百哩的車子，到協助美國聯邦調查局建立21世紀的資料庫系統，任何東西都可以用Scrum打造。</p>

  <p data-cfi="/4/12" class="calibre2">請繼續閱讀，我想你會看到Scrum可望協助貴公司在工作、開發、規劃及思考等層面轉換為新方式。我深信Scrum幾乎能在任何產業中促成企業革新運作機制，正如Scrum已經為眾多新公司的創新與產品上市速度帶來革命性的改變，也促成矽谷及科技世界裡諸多新產品的問世。</p>

  <p class="author" data-cfi="/4/14">──傑夫．薩瑟蘭博士</p>
</body>
</html>
