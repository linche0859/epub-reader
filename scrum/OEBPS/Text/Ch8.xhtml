<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="../../page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body data-cfi="/4" class="calibre">
  <h1 data-cfi="/4/2" class="calibre1"><span class="num" data-cfi="/4/2/2">第8章</span>優先順序</h1>

  <p data-cfi="/4/4" class="calibre2">幾年前，我首度在麻州牛頓中心（Newton Center）的Johnny's Luncheonette餐廳認識麥斯威爾。我曾在前文中提及，他是OpenView Venture Partners的創辦人，就是他察覺到，增加工時所帶來的工作事項，會多過於所完成的工作事項。我已和OpenView Venture Partners及該公司投資的其他公司合作近八年的時間。在這些公司裡，我們都看到生產力大幅提升。但Scrum要講的不是只有加快團隊運作的速度而已，也要講擴大成效的部分；以創投來說很簡單，就是營收。如果一家公司不賺錢，投資就不成功，它只能算是你閒暇時的興趣而已。</p>

  <p data-cfi="/4/6" class="calibre2">我看過太多的公司都是如此，它們擁有很棒的想法與很出色的產品，不但人人都讚嘆，它似乎能攻占利基市場，看起來應該能成功；反正就是很酷的產品。但是，歷經無數的想像、靈感及付出心力後，負責開發產品的人卻從來沒想過要如何實際靠這樣東西賺錢。</p>

  <p data-cfi="/4/8" class="calibre2">Pets.com與Zappos之間到底有何不同？兩者都發現一個民眾每年消費數十億美元的市場區隔，也都找到方法，透過網路，更方便、更平價地把產品送到消費者手中的方法。但是，前者變成網路泡沫化的代表性例子，虛擲好幾百萬美元的投資；後者卻變成市值超過十億美元的公司。兩家公司都有願景，差別只在於Pets.com缺乏優先順序的概念，不知道何時該做什麼。</p>

  <p data-cfi="/4/10" class="calibre2">我很喜歡把這張文氏圖（Venn diagram）拿給人家看。</p>

  <div class="pic" data-cfi="/4/12"><img alt="p245" src="../Images/p245.jpg" data-cfi="/4/12/2" class="calibre6"/></div>

  <p data-cfi="/4/14" class="calibre2">每家公司都必須想想這張圖的概念。就算你充滿熱情，假如只是把心力集中在自己能創造的事物上，最後可能會做出沒人想要的東西；假如你只是把心力集中在自己能推銷的東西上，可能會承諾顧客做出你根本做不出來的東西；假如你只打造雖然能推銷、自己卻缺乏熱情的東西，最後你只會做出平庸的產品。但在這張圖的正中央，也就是三方交會的甜蜜點，是一個「建立在現實上的願景」，一個真的很可能創造出卓越成果的願景。我會在本章教各位如何實現。在先前的幾章裡，我著重探討如何把事情做得又快又好，而本章則會偏重在如何讓「又快又好」為你所用，如何真正助你創造卓越。</p>

  <p data-cfi="/4/16" class="calibre2">麥斯威爾說，Scrum的真正威力在於它的「待辦事項清單」，不但預先擬妥、排好優先順序，還列出事情的相對價值。就是因為這樣，他才會把Scrum應用到公司的創投事業群，也才會認為Scrum是一種重要的競爭優勢。</p>

  <h2 id="sigil_toc_id_50" data-cfi="/4/18" class="calibre3">待辦事項清單：何時該做什麼</h2>

  <p data-cfi="/4/20" class="calibre2">當你在建置Scrum時，第一件要做的事就是建立待辦事項清單。它可能長達數百項，也可能只有少數幾件你要先處理的事。當然，你必須清楚知道，在作業的最後希望得到什麼，它可能是一種產品、一場婚禮、一項服務、一種新疫苗或一棟油漆好的房屋。它可能是任何東西，但是一旦你擁有願景，就必須考量如何才能讓它實現。</p>

  <p data-cfi="/4/22" class="calibre2">最近我和一家公司合作，它的主要產品是大樓的自動化系統，包括暖氣、冷氣、電力、管線全部包辦在內的整合系統。該公司正在開發的一種新產品是家庭自動化系統，可利用行動裝置控管家裡的各種事，像是打開大門、控制暖氣吹出、開燈等。因此，他們坐下來把所有必須搞定的事情列成清單，像是開關、控制器、介面、感應器、通訊協定，諸如此類。他們列的其實不是具體的規則或物件，而是所有需要的「故事」。</p>

  <p data-cfi="/4/24" class="calibre2">所以，他們在列清單時會採取以下的格式：「身為屋主，我希望能看到誰站在我家門前，這樣我才能開門歡迎那些我想要讓他們進來的親友。」他們為打開車庫鐵門、開啟空調、控制燈光等事項都寫了故事。他們不停的寫，直到完成清單為止。這份清單列出系統必須具備的全部功能，而且要從「足以激發顧客購買意願」的角度來寫。</p>

  <p data-cfi="/4/26" class="calibre2">最後，他們列出有數百件待辦事項的清單。這個系統很龐大、很複雜；待辦事項清單的意義在於，應該要把產品裡可以囊括的所有元素都列入其中。雖然永遠不可能真的百分之百完全實現，你還是會想要準備一份清單，從而得知在那樣的產品願景下所有可能納入的功能。</p>

  <p data-cfi="/4/28" class="calibre2">不過，重點在於決定先做什麼。你得自問的問題包括：哪些項目最有助於推展業務？哪些項目對顧客來說最重要？哪些項目最有利可圖？哪些項目最容易實現？你必須明瞭，清單中有很多事項是你永遠不會觸及的，但是對於那些能在最低風險下創造最多價值的事項，你應該一開始就先動手。在Scrum這種「每次都多一點點」的發展與完成手法下，你會希望從能馬上創造營收的事著手、有效率地降低專案的風險。你會希望從功能層面上做到這一點，會希望能盡快開始把價值提供給顧客，也會需要一些百分之百「已完成」、足以展示成果的東西。它或許只是龐大專案裡的一小部分，但必須是「已完成」且能夠展示的。如果你正要油漆房屋，或許第一件列為「已完成」的事項會是為客廳的所有線板上漆。</p>

  <p data-cfi="/4/30" class="calibre2">在產品開發中，有一個一再被證明的不變定律。我曾在前面提及：有80%的價值來自於20%的功能。請你想想，這意謂著任何你購買的東西裡，絕大多數的價值，亦即人們想要的大部分功能，來自於廠商開發項目的其中五分之一。以這家公司來說，在檢視這份家庭自動化系統應有功能的龐大清單時，他們很清楚，也早已清楚顧客真正要的只有其中20%。Scrum的能耐就在於，能幫你找出如何先建置那20%的東西。在傳統產品開發過程中，一直到他們交出完整產品之前，開發團隊並不清楚那20%究竟是什麼，這意謂著有80%的心力白費了。我想，你應該很清楚我對於浪費所抱持的態度。</p>

  <p data-cfi="/4/32" class="calibre2">如果你能比競爭對手快五倍的時間交出成果，還提供高於對手五倍的價值，還有贏不了的道理嗎？</p>

  <p data-cfi="/4/34" class="calibre2">因此，這家開發自動化系統的公司成員坐下來，看著這份列有眾多功能的清單，並且問著自己道：「好了，我們明天要做什麼好？對顧客來說最重要的是什麼？我們如何比別人更快提供價值？」正如麥斯威爾所言，困難之處不在於設想你想要實現什麼，而在於找出你能實現什麼。不管你是在興建房屋、打造車輛、撰寫書籍、開發電玩、掃除犯罪或清除垃圾，都同樣如此。要找出能在哪方面以最少的心力創造出最大的價值，然後馬上去做。接著，要找出下一個能增加價值的項目，以此類推。你會發現自己創造出實際可展示的成果，並且予以呈現的速度，比你原本的想像還來得快。關鍵就在於安排工作的優先順序。</p>

  <p data-cfi="/4/36" class="calibre2">如何才能做到？首先，你得找一個既能擘畫願景、又清楚價值何在的人。在Scrum中，我們就以「產品負責人」稱呼他。</p>

  <h2 id="sigil_toc_id_51" data-cfi="/4/38" class="calibre3">產品負責人</h2>

  <p data-cfi="/4/40" class="calibre2">在Scrum中只有三種角色。你不是團隊的一員，負責做事；就是Scrum大師，負責協助團隊找出如何把事情做得更好；或是產品負責人。產品負責人決定該做什麼事，待辦事項清單為他所有、內容也歸他管理，還有最重要的優先順序也是一樣。</p>

  <p data-cfi="/4/42" class="calibre2">在1993年，我推動第一個Scrum團隊時，並沒有設置產品負責人。我是領導團隊的一員，除了具體安排每段衝刺中團隊該做的任務以外，我還有許多其他職務要處理，我要負責管理與行銷的工作，必須和顧客打交道，還得擬定策略。但是在第一段衝刺時，我的判斷是自己還能處理待辦事項清單，只要能確保在下一段衝刺中，團隊有足夠的「故事」與事情可做就好了。但是問題在於，當第二段衝刺結束後我們導入「每日立會」，團隊的工作速度在接下來的衝刺中成長400%，一個星期內就把原本以為要花一個月才能做完的事情全部做完了，待辦事項清單中已經沒有事情讓他們做了！我原本以為自己有一個月的時間能創作更多的「故事」。這無疑是很嚴重的問題，但還是必須解決。因此，我想出產品負責人的角色，以及什麼特質的人適合執行。</p>

  <p data-cfi="/4/44" class="calibre2">關於這個職務的靈感是來自於豐田汽車的「總工程師」。豐田的總工程師要負責的是一整條產品線，像是Corolla或Camry。要做好這樣的工作，他們必須善用來自專業團隊的人才，像是車體工程、底盤、電力等。總工程師必須從這些團隊中找人組成足以生產汽車的跨功能團隊。外界都把這些傳奇性的總工程師（或稱「主查」，其實原本就是這個名字）視為代表「豐田之道」（Toyota Way）的全能領導者。就某種角度來看，他們確實是。但是他們其實並沒有權力，沒有人向他們報告，反倒是他們要向自己的團隊報告。成員們會告訴總工程師哪裡不對，因此總工程師必須確知自己是對的。他們不對任何成員做績效評估，也不負責升遷或加薪，但是他們會決定車子的願景，以及車子要如何生產，他們必須設法說服團隊成員，而不是強迫。</p>

  <p data-cfi="/4/46" class="calibre2">我希望把這樣的角色帶入Scrum之中。精實企業研究院的約翰．徐克（John Shook）有一次在描述總工程師的角色時，在開頭引用美國海軍陸戰隊領導手冊的內容：</p>

  <div class="kai" data-cfi="/4/48">
    <p data-cfi="/4/48/2" class="calibre5">一個人的領導責任與權力是兩碼子事……許多組織內部的負面狀況，追根究柢都源自於其成員已經根深柢固地認定「權力和責任應該是同一件事」使然。我認為，對於此事的誤解已經很泛濫、很難處理了，已經深藏在意識裡，以致於我們自己根本沒有察覺這件事。<a class="footnote" href="#fnX-1" id="fX-1" data-cfi="/4/48/2/2">[1]</a></p>
  </div>

  <p data-cfi="/4/50" class="calibre2">回想我在西點軍校與越南的時光，我發現自己很認同領導與權力無關這件事。領導反倒與知識、扮演僕人領袖，以及一些其他因素有關。總工程師不能只是要求員工用某種方式做某件事，他必須說服或勸誘員工，並且證明他的做法是對的、是最好的。一個人通常要有三十年的經驗才能扮演這種角色。我在Scrum裡需要這樣的人，但是我也知道只有少數人擁有這種水準的技能與經驗。因此，我把它分成兩個角色：一個是主導「怎麼做」的Scrum大師；另一個則是主導「做什麼」的產品負責人。</p>

  <p data-cfi="/4/52" class="calibre2">即便在剛發展Scrum的草創時期，我已知道自己需要一個與顧客有密切連結的人來幫忙。在每段衝刺中，產品負責人都必須把顧客的回饋意見傳達給團隊知道。他們必須把一半時間花在與購買產品的人對話（了解這些人對於日趨完備的最新版本產品有何感想，以及它們是否傳遞出足夠的價值），另一半時間則花在與團隊一起擬定待辦事項清單（讓團隊成員知顧客重視什麼、不重視什麼）。</p>

  <p data-cfi="/4/54" class="calibre2">請記住：「顧客」可以是一般消費者、大銀行、妳的丈夫，或是任何需要輪狀病毒疫苗的人，以及正仰賴你提供事物給他們的人。顧客就是任何預計可以從你正動手在做的事情中獲得價值的人。</p>

  <p data-cfi="/4/56" class="calibre2">但是，我並不需要管理者，我要的是一個團隊願意相信、願意信任由他來為待辦事項清單安排優先順序的人。因此，我找來一位擅長產品行銷的聰明傢伙（我要提醒你，不是工程人員，而是行銷人員）。於是，唐．羅德納（Don Rodner）就成為第一個產品負責人，他並不是以技術角度來理解我們當時正在開發的產品，雖然他確實具備足夠的技術知識與工程師溝通；他是從顧客的角度理解。實際使用產品的人需要的是什麼？在挑選產品負責人時，要找一個能從「獲取價值」角度思考的人來擔任。正如我一個朋友所說的：「我太太是最棒的產品負責人；她精確知道自己要什麼，我只是負責執行。」</p>

  <p data-cfi="/4/58" class="calibre2">產品負責人不但比Scrum大師需要更廣泛的技能，還必須符合幾項標準的檢視。Scrum大師與團隊負責的是工作速度有多快，以及還可以再快多少；產品負責人則是負責把團隊的生產力轉換成價值。</p>

  <h3 class="sigil_not_in_toc" data-cfi="/4/60">產品負責人的四個特質</h3>

  <p data-cfi="/4/62" class="calibre2">我認為產品負責人須具備四大特質：</p>

  <p data-cfi="/4/64" class="calibre2">第一，產品負責人必須具備專業領域的知識。其一是產品負責人應該對團隊目前正在執行的流程有充分了解，才能得知團隊做得到哪些事，以及同樣重要的，做不到哪些事。其二，產品負責人也必須對於「該做什麼」有充分了解，才能知道有哪些東西可以轉換為實際有意義的價值，或許是一套能協助FBI逮到恐怖份子的電腦系統，或許是一種能在公立學校改善學生成績的教學方法。其三，他也必須對市場有充分了解，才能得知還有哪裡可以進行差異化。</p>

  <p data-cfi="/4/66" class="calibre2">第二，產品負責人必須擁有決策權。管理階層不應該干涉團隊運作，產品負責人應該被授予決策權，才能自行決定產品的願景與如何實現願景。這一點十分重要，因為產品負責人會面對來自公司內外利害關係人的龐大壓力，他們必須擁有堅持下去的權力。產品負責人應該為成果負責，但是要讓他們有自己的決策權。</p>

  <p data-cfi="/4/68" class="calibre2">第三，產品負責人必須讓團隊找得到人，必須向團隊說明應做事項與做法。由於產品負責人要為待辦事項清單承擔最終責任，所以必須經常與團隊溝通。團隊的專業知識也往往可以提供給產品負責人做為決策用的資訊。產品負責人必須可信賴、前後一致、讓團隊找得到人。假如讓人聯絡不上，團隊將無從得知該做什麼，或該依照何種順序執行。團隊成員仰賴產品負責人勾勒「願景」，也仰賴產品負責人提供市場情報。團隊若找不到產品負責人，整個流程可能隨之瓦解。這也是我很少建議企業由執行長或其他高階主管擔任產品負責人的原因之一，因為他們根本沒有充足的時間可以滿足團隊所需。</p>

  <p data-cfi="/4/70" class="calibre2">第四，產品負責人必須為價值負責。對企業而言，最重要的就是營收。我會以「每一點」創造多少營收來衡量產品負責人的表現。假設一個團隊每週完成40點的工作，我想要計算出每一點可以創造多少營收。但是，也可以用團隊做成功多少事當作衡量價值的標準，我知道有某個執法團隊是以「每週抓到多少個重罪通緝犯」來衡量價值；我也知道有些導入Scrum的教會是以「提供給教友的服務水準」來衡量自己成功與否。關鍵在於，要決定價值的衡量標準是什麼，再由產品負責人多促成一些價值。在Scrum中，由於所採用的手法極為透明，因此這種衡量標準是很容易觀察的。</p>

  <p data-cfi="/4/72" class="calibre2">但是，要在一個人身上同時找到這些特質卻有些困難，因此在大型專案裡往往會由一群產品負責人處理所有的需求。後面我會再深入探討，但是在這裡我希望各位想像一下，自己正身處於一架F-86軍刀戰鬥機的駕駛艙，正準備加入一場朝鮮半島上空的空戰，身旁坐著有「瘋子少校」（Mad Major）之稱的約翰．伯伊德（<span class="kai3" data-cfi="/4/72/2">John Boyd；譯注：生於1927──1997年，美國空軍戰鬥機飛行員出身，少校時期提出對第三代以降的戰鬥機影響深遠的「能量機動理論」，但是因為經常出言不遜，而有「瘋子少校」的稱號，退役時官拜上校</span>）。</p>

  <h2 id="sigil_toc_id_52" data-cfi="/4/74" class="calibre3">觀察、導向、決定、行動</h2>

  <p data-cfi="/4/76" class="calibre2">韓戰時的空對空戰鬥，主要發生在美國F-86軍刀戰鬥機與俄製米格15戰鬥機之間。米格15戰鬥機的速度較快、機動性較高，推重比（譯注：發動機推力與飛機重量的比）也較高，在各方面都是比較出色的戰機。理論上，米格15戰鬥機應該早就把空中的美國戰機都擊落了；但事實上，雙方遭擊落的比例卻是十比一。伯伊德努力研究背後的原因，形塑出不同於以往的空戰樣貌，也成為我們在發展Scrum時的重要參考。</p>

  <p data-cfi="/4/78" class="calibre2">雖然伯伊德在戰爭中從未擊落任何敵機，但他依然稱得上是有史以來最出色的戰鬥機飛行員。韓戰停戰前，他只到韓國出過二十二次任務，而當時的戰鬥機飛行員必須執行三十次僚機任務，才能擔任在編隊中率領僚機的長機飛行員。直到戰後，他前往位於南內華達州奈利斯空軍基地（Nellis Air Force Base）的美國空軍武器學校（USAF Weapons School）授課時才聲名大噪。在重視人員輪調的軍中，他史無前例地在該校擔任六年的教官。</p>

  <p data-cfi="/4/80" class="calibre2">戰鬥機飛行員並非謙沖自牧之輩，在他們出現在奈利斯空軍基地時就已經被視為美國空軍中最傑出的飛行員了，因此顯得有些趾高氣昂。伯伊德有一種很簡單的方法可以殺殺他們的銳氣，好讓他們願意聽他授課。他都會邀請這些學生到空中，並在他的六點鐘方向飛行，也就是飛在他的正後方，那是空戰時最有利的位置。接著，他會要學生緊跟在他的後方。但是，他在四十秒內都一定能神乎其技地飛到學生的六點鐘方向，還會一直對無線電喊著：「射擊！射擊！射擊！」那是在雷射、電腦及模擬武器尚未問世的時期，他這樣大叫是在告訴學生：「你已經死了。」伯伊德屢屢獲勝，也為他贏得第二個綽號：「四十秒」伯伊德。</p>

  <p data-cfi="/4/82" class="calibre2">他的另一個綽號是「瘋子少校」，得自於他活力十足的自我表達。這時的他，臉部通常距離頂撞他的人只有三吋，他也會用兩根手指去戳對方的胸口。在他那兩根手指間，一定會夾著一根點燃的Dutch Masters牌雪茄。根據傳說，有時候──我相信真的只是不小心，他這個動作會害對方的領帶著火。表達自己的意見時，他會運用手邊任何可用的工具贏得爭執，從不感到愧疚。</p>

  <p data-cfi="/4/84" class="calibre2">伯伊德擁有看穿整個作戰空間的能力。他曾在口述歷史中表示：</p>

  <div class="kai" data-cfi="/4/86">
    <p data-cfi="/4/86/2" class="calibre5">我看到自己在一個巨大的球裡，我人在球的裡面，可以看到所有在球的周邊發生的行動，（但）我當然還是一直在操控著飛機……我的視覺來自兩個參考點，當我在空對空作戰時，我可以像一個置身其外的旁觀者一樣地看到我自己，也能看到周遭的所有個體。<a class="footnote" href="#fnX-2" id="fX-2" data-cfi="/4/86/2/2">[2]</a></p>
  </div>

  <p data-cfi="/4/88" class="calibre2">這樣的察覺能力，也就是能看到空中全方位事物、觀察事情發展過程的能力，讓他得以構思出自己的一套軍事理論，最後改寫美國發動戰爭的手法。</p>

  <p data-cfi="/4/90" class="calibre2">伯伊德離開美國空軍武器學校後，決定研讀工程學，後來設計出一套有關飛機性能的模型，透過能量之間的關係闡述空對空作戰。他的這套能量機動（Energy Maneuverability, EM）理論把飛機在任何狀況下的動能與位能、高度、空速、方向，以及能在多快的速度下改變上述任何一項變數都納入考量。最後，大多數戰機在設計時都採用他的理論，這也直接促成F-15與F-16這兩款過去四十年中位居主導地位的戰機得以開發。</p>

  <p data-cfi="/4/92" class="calibre2">當時的問題在於，根據伯伊德的理論，米格15戰鬥機應該要徹底打敗F-86軍刀戰鬥機才對，沒道理會是相反的結果。在羅伯特．克拉姆（Robert Coram）為伯伊德所寫的傳記中提到，當時伯伊德經常一連發呆好幾天，努力設想背後的原因，他確信自己的理論是對的，但美國戰機飛行員的敵機擊落率為何會是對手的十倍呢？是因為訓練嗎？這只能解釋一部分的原因。是因為戰術嗎？或許是，但是這個因素同樣無法造成這麼懸殊的結果。這時候他突然想到，美國飛行員在空戰時看得比對手更清楚、行動更迅速。原因不在於飛行員本身的任何特質，只是出於一些純粹設計上的選擇而已。軍刀戰鬥機採用泡狀座艙罩，米格戰鬥機卻是採用多片玻璃板和框架，因而擋住飛行員的視線；F-86擁有液壓驅動的飛行控制系統，米格戰鬥機卻只有液壓輔助的控制系統。據了解，米格15戰鬥機的飛行員必須練習舉重，以培養駕駛戰鬥機所需的上半身力量。</p>

  <p data-cfi="/4/94" class="calibre2">因此，美國飛行員會先看到米格戰鬥機，然後美妙地根據這樣的資訊，而比中國或北韓的飛行員更快採取行動。雙方作戰並非取決於戰鬥機的性能，而是在於飛行員能夠以多快的速度把觀察到的資訊轉換為行動。米格戰鬥機採取行動後，美軍戰鬥機會加以因應，接著在米格戰鬥機採取接下來的因應行動時，美軍飛行員已經又先採取另一個行動了。他們因應米格戰鬥機行動的速度快上許多，這使得性能上較先進的米格機成為待宰羔羊。</p>

  <p data-cfi="/4/96" class="calibre2">我在越南時也發生同樣的現象。當時對戰的也是不同戰機，分別是米格21戰鬥機和F-4。不過，F-4同樣因為能見度較佳，而勝過操控性較佳的蘇聯製戰機。正如伯伊德所言，他最知名的創新讓飛行員得以「掌握敵人的決策迴圈」。</p>

  <p data-cfi="/4/98" class="calibre2">這樣的洞悉能力已經成為作戰時的基本要素，而這也是我設計Scrum的目的，讓產品負責人迅速根據即時的回饋意見做決策。只要能不斷得到任何正由你所從事的活動中得到價值的人所提供的回饋意見，無論是來自在亞馬遜網站點擊購買鍵的人、你教會裡的教友、教室裡的學童，或是某位正在試穿衣服的顧客，你就能經常調整自己的策略，而且更快成功。</p>

  <p data-cfi="/4/100" class="calibre2">流程會照著讀來有點滑稽的「<b data-cfi="/4/100/2" class="calibre14">OODA</b>」循環走，這個字是<b data-cfi="/4/100/4" class="calibre14">觀察（Observe）、導向（Orient）、決定（Decide）、行動（Act）</b>的縮寫。或許發音聽起來很好笑，在戰爭中或商業上卻很好用。掌握某人的決策迴圈，可以導致對方困惑或疑惑，繼而反應過度或反應不足。就像伯伊德向其他軍官做簡報時所說的：「應變速度最快的人就能存活。」<a class="footnote" href="#fnX-3" id="fX-3" data-cfi="/4/100/6">[3]</a><b data-cfi="/4/100/8" class="calibre14">OODA</b>循環圖如下面的圖形所示。</p>

  <div class="pic" data-cfi="/4/102"><img alt="p262" src="../Images/p262.jpg" data-cfi="/4/102/2" class="calibre6"/></div>

  <p data-cfi="/4/104" class="calibre2">「觀察」這件事很明顯，就是要在事態演進時看清楚狀況。但是做來並不如聽來容易，伯伊德的描述是，你必須跳脫出來，一窺周遭的全貌，而不是只從自己的角度出發。</p>

  <p data-cfi="/4/106" class="calibre2">「導向」不只和自己身處何地有關，也與你能看出何種結果有關，亦即你能為自己安排哪些不同的替代方案。據伯伊德所言，這牽涉到一個人的基因遺傳、文化傳統、先前的經歷，當然也包括演變中的周遭情境。因此，導向不但反映出你如何看待這個世界，以及你身處其中的哪一個位置，也反映出你能看到什麼樣的世界。</p>

  <p data-cfi="/4/108" class="calibre2">觀察與導向共同促成了「決定」，進而促成「行動」。接著，這個循環又要重新從觀察開始，觀察的是你的行動與對手的行動帶來的各種結果；當場景轉換為商業世界，就是對市場反應的觀察。</p>

  <p data-cfi="/4/110" class="calibre2">Scrum定期提出一點新成果，為的是讓產品負責人能知曉新增加的該成果帶來多少價值、大家對它的反應是什麼。接著，根據這樣的資訊，調整團隊在下一段衝刺中的行動事項。如此一來，可以建立穩定的意見回饋循環、提升創新與改善的速度，並讓產品負責人得以評估目前的產品傳遞出多少價值（在企業裡，我們是用金錢來評估。但是，如果我要油漆房屋內部，可能會以完成的房間數來評估）。這樣一來，產品負責人就有能力因應變化萬千的環境，即時調整產品內容。</p>

  <p data-cfi="/4/112" class="calibre2">或許很難想像，對於那些乍看之下在完成前全無價值可言的產品或專案，要如何釋出每次增加些許東西的新版本？舉例來說，汽車要如何推出增加些許新東西的新版本？或是百萬美元的電玩遊戲呢？關鍵在於找出哪些部分真的蘊藏價值，足以藉此取得回饋意見，並據以即時因應。</p>

  <p data-cfi="/4/114" class="calibre2">就以汽車為例，豐田汽車的Prius車款從只有概念到上市僅僅花費十五個月，比該公司過去任何車款都來得迅速。雖然負責設計的團隊並未在車子完成前就先開賣，但是他們確實一開始就迅速完成車子的原型，好讓總工程師能「體驗」一下，並且看看團隊的開發方向是否正確。這種快速製作出來的原型，由於是已具備完整功能的車子，只是在上市前要一再改善原型車，直到做出你想要賣給顧客的產品為止，有助於促成極為快速的調整動作。重點並不在於一開始就做出盡善盡美的設計，反倒是要先做出已具備各種功能的原型車，再看看還有哪裡可以改善。在改善之後再製作下一款原型車，繼續改善。祕訣在於，你愈能更快獲得一些實際的回饋意見，就能愈快做出更好的車子。</p>

  <p data-cfi="/4/116" class="calibre2">我在第四章提過的「維基速度團隊」，它在每週都會做出完整的原型車，還提供銷售。這樣的買賣並非在大規模市場中進行，因為維基速度團隊還沒做好準備，但還是會有一些喜歡嘗鮮的顧客，願意支付兩萬五千美元購買這些原型車。在你有意打造什麼東西時，別預設自己一定要到接近完成時才能提供有價值的東西給使用者。你反而該努力想想，最低限度的可行產品是什麼？「如果至少要提供一些價值給顧客，我在最小限度內必須打造什麼樣的東西？」</p>

  <p data-cfi="/4/118" class="calibre2">電玩遊戲是另一個例子。現在有愈來愈多的開發人員都會讓早期採用者付費玩最早的「alpha版」，才能在遊戲真的做出來前從最忠誠的玩家那裡得到意見回饋，藉此得以知道玩家的實際反應，而非只是猜測他們會如何反應。</p>

  <p data-cfi="/4/120" class="calibre2">視你所屬的產業或是經營的組織不同，你可能很難實施這種漸進式的產品釋出手法。退而求其次，假如你無法把東西提供給外部顧客試用，就找一個內部顧客代替大眾做這件事，而產品負責人就是不錯的人選。把任何可能獲得有用回饋意見的東西拿給內部顧客看，不管是不動產擴建計畫、工廠升級計畫、煞車系統改造、志工服務活動，只要有一些內容都可以。用意在於，要為自己創造檢驗與調整產品的機會。無法因應環境、競爭者或消費者喜好轉變的企業或組織，麻煩就大了。</p>

  <p data-cfi="/4/122" class="calibre2">伯伊德是這麼說的：</p>

  <div class="kai" data-cfi="/4/124">
    <p data-cfi="/4/124/2" class="calibre5">我們希望把另一個人的步調或節奏納入考量，藉以打倒對方……在我們的腦中必須擁有一幅稱為「導向」的影像或照片。接著，我們必須決定自己打算做什麼，並且付諸實行……再來我們要看看它（所導致）的作用、加上我們的觀察，然後繼續把新資料、新導向，新決定、新行動都加進來，永無止境……導向並非只是你所處的一種狀態，而是一個過程。你永遠都要找新導向……</p>

    <p data-cfi="/4/124/4" class="calibre5">在一個全無變化而美好的小小世界裡……（居住在這種世界裡的生物就像）恐龍，即將滅絕。遊戲的名稱叫做「別當恐龍」。如果你處於一種均衡狀態，你就完了……背後要傳達給你的訊息很簡單：沒有出路……各位，它就是如此。<a class="footnote" href="#fnX-4" id="fX-4" data-cfi="/4/124/4/2">[4]</a></p>
  </div>

  <p data-cfi="/4/126" class="calibre2">各位，它就是如此。正如我在第一章講的，這是很明顯的選擇：不改變，就等死。如果你不掌握競爭對手的決策迴圈，他們就會掌握你的決策迴圈。伯伊德就表示：我想做的是把我的對手逼回他自己的思維裡……這樣我就能迫使他陷入迷惘與混亂，癱瘓他的行動。我不知道你是怎麼想的，但是我寧願當那個下手的人，而非被下手的人。</p>

  <h2 id="sigil_toc_id_53" data-cfi="/4/128" class="calibre3">優先的事情優先做</h2>

  <p data-cfi="/4/130" class="calibre2">現在你有一個經常更新待辦事項清單、安排順序、把東西做出來的產品負責人了。在手邊有數百件待辦事項時，安排順序的流程可以很複雜，也可以很快速。關鍵在於，要找出如何把最有價值的東西最快做出來。或許你有好幾百萬種方式安排待辦事項清單的順序，但你最想要的應該是盡快把囊括20%的功能傳遞出80%價值的東西做出來。在第一段衝刺前，你的第一次猜想幾乎可以確定不會是最適切的選擇，卻是你在當下最好的選擇。</p>

  <p data-cfi="/4/132" class="calibre2">但那只不過是你的第一次猜想而已。第一段衝刺結束後，一旦你完成OODA循環，為顧客創造出一些東西後，你就會改變順序，你就會知道另一種順序其實比較好。</p>

  <p data-cfi="/4/134" class="calibre2">接著就會持續這麼做，不斷更新待辦事項清單、每段衝刺結束後重新安排優先順序，朝著最快速創造價值的順序演變。或許你永遠無法找出絕對完美的順序，但你還是希望能一步一步地在每段衝刺後持續改善。</p>

  <p data-cfi="/4/136" class="calibre2">要記住的重點是，優先順序永遠處於變動中，這一週的適切順序到了下一週未必就適切。環境可能已經改變，你也可能得到新消息，或是發現某些事情變得簡單、某些事情變得困難。因此，在每段衝刺後都會頻繁出現待辦事項清單上優先順序改變的情形。重點在於承認不確定性存在，接受自己目前安排的優先順序與創造的價值，只是當下的相對結果，它將會一而再、再而三地不斷改變。</p>

  <p data-cfi="/4/138" class="calibre2">企業有一種可能會陷入的壞習慣是，只因為市場需求經常變動、管理者不確定最有價值的是什麼，就把每件事都列為最優先。每件事都是第一順位。有「大帝」之稱的普魯士腓特烈二世曾經說過一句格言，各位應該謹記在心：「如果每件事你都想捍衛，就等於什麼都沒有捍衛到。」未能把手邊資源與心力集中，結果就是會讓它們稀釋到無關緊要的地步。</p>

  <p data-cfi="/4/140" class="calibre2">幾年前，我在法國的諾曼地慶祝七十歲生日。我跑去觀看那個在D-day執行諾曼地登陸時的知名海灘；我的父親當年也曾參與登陸行動。退潮時，奧馬哈海灘看起來就像一片綿延好幾哩的斜坡，沉入遙遠的海面，沙粒看似無窮無盡的延伸。要從那道漫長又潮溼的斜坡往上跑，還要面對德國人的槍枝，肯定需要難以想像的勇氣。經過數千名在當天死亡的亡者墓碑時，必須保持肅靜、尊敬以對。但是，在我開始閱讀關於德國人如何防守的記載時，我意識到美軍的登陸之所以會成功的原因之一，是因為德國人忘了腓特烈大帝的警告。他們因為聯軍的欺瞞手段而感到困惑，以致於把軍隊分散到法國的整個海岸線上。這使得聯軍得以孤立每支德國部隊，然後各個擊破。德國人因為沒有安排好優先順序，而輸掉一切，真是謝天謝地。</p>

  <h2 id="sigil_toc_id_54" data-cfi="/4/142" class="calibre3">釋出產品</h2>

  <p data-cfi="/4/144" class="calibre2">現在你的手邊有優先順序了，你也知道80%的價值來自哪裡。你何時要釋出產品呢？在這個部分，Scrum也具有大幅加快價值創造速度的效用。無論你生產什麼，都會希望能把它盡快送到實際準備使用的人手中。你甚至會在開發出那20%的功能前就想這麼做，你會希望釋出的東西至少能提供一點價值，我稱為「最小可行產品」（Minimum Viable Product）或MVP。它應該會是你首度對外展現的東西。它必須具有多少效用？它必須實際能用，雖然對開發它的人來說，只有這麼一點東西就拿出來似乎有些難為情，但最好還是盡快把產品展示在外界面前！藉以取得回饋意見，做為補足決策迴圈與安排優先順序之用。它是0.5版、是能照相但無法對焦的相機、是只有兩張椅子的餐廳、是把疫苗發送到你想幫助的一百個村子裡的其中五個，它的完成程度幾乎要用可笑來形容。</p>

  <p data-cfi="/4/146" class="calibre2">不過，它卻能為你帶來回饋意見。相機的機身真的讓人很難拿，因為快門鍵設計在詭異的地方；椅子的木頭和桌子的顏色不夠搭配；和村子裡的長者互動時，你太過失禮而得罪人家，而那都是原本可以避免的。諸如此類的錯誤，寧願早一點在傷害還輕時就犯錯。</p>

  <p data-cfi="/4/148" class="calibre2">另外，在你正式釋出產品，或是首次揭露大型專案的成果時，你的東西必須是已經先調整過，並且已經找到顧客所需價值的版本。若以相機為例，或許最後我們會發現，雖然愛拍照的人曾經透露相機的「風景模式」功能和「能夠在臉書上分享照片」的功能同樣有價值，但是在他們實際開始使用後，卻從未用過風景模式拍照，反倒是經常愛把拍攝的照片分享到臉書上。</p>

  <p data-cfi="/4/150" class="calibre2">這意謂著你可以優先開發顧客重視的功能，並在完成度只有20%的狀況下釋出產品。你清楚它並不完美，但已經趨近完美了。假如還想琢磨得更完整後再釋出，只是平白失去發掘其他價值的機會而已。</p>

  <div class="pic" data-cfi="/4/152"><img alt="p270" src="../Images/p270.jpg" data-cfi="/4/152/2" class="calibre6"/></div>

  <p data-cfi="/4/154" class="calibre2">這種流程的出色之處在於，它是不斷循環的，只要「一再重複」即可。一旦人們用過你的產品或服務，或是察覺到生活因而改變，他們就會告訴你下一個最有價值的地方在哪裡。等到完成20%的時候，就再次釋出，以此類推。</p>

  <p data-cfi="/4/156" class="calibre2">在這種略有新東西就釋出的流程下，等到你完成初始產品或計畫的一半內容時，你等於已經在一半的時程裡釋出200%的價值。這正是Scrum的真正威力所在，也是它之所以能徹底改變工作方式與生活方式的原因。別把心力放在要把清單中所有大大小小的東西全部做出來，而是應該專心做出有價值的部分，也就是人們真正想要或需要的。</p>

  <div class="pic" data-cfi="/4/158"><img alt="p271" src="../Images/p271.jpg" data-cfi="/4/158/2" class="calibre6"/></div>

  <p data-cfi="/4/160" class="calibre2">我想起來自伊拉克或阿富汗的幾個故事。故事是這麼說的：美國一個野戰排來到城裡，環顧四周後說：「這裡的人在養雞，我們來幫他們興建一座雞隻處理廠。」於是他們花費數百萬美元打造一座最現代的雞隻處理廠。他們並未考量到當地幾乎沒有穩定電力，也沒有考量到居民幾乎都不識字，要把他們訓練到懂得使用設備非常困難。後來又有人來到城裡詢問居民道：「你們覺得真正對你們有幫助的是什麼？」居民們說：「如果能在河面上蓋一座人行橋會很棒，那樣一來，我們要去市場時就不必花費半天的時間走到最近的渡橋了。」這座人行橋只花費數百美元就興建完成，雖然它看起來遠比大型廠房遜色，呈報給華盛頓的主管時聽起來也沒有那麼了不起，但是對這些居民而言，卻肯定比外觀光鮮、內部的設備閒置到生鏽的建築物來得更有價值。</p>

  <p data-cfi="/4/162" class="calibre2">另一個值得一提的重點在於，有時候你可以因而及早做完事情。假設你正為「鬧鐘」公司開發一種下一代的超級鬧鐘。你有一份上面列出數十種功能的清單：時鐘功能、貪睡按鈕、馬表功能、大聲鬧鈴功能、收音機功能、可充當iPhone底座、GPS功能，諸如此類。但是，要當一個稱職內行的產品負責人就得依照人們真正想要的功能安排優先順序：易於設定的鬧鐘、足夠的音量、收音機功能，以及清楚的顯示面板，足以得知房間是亮是暗。等到你的團隊做出產品後，你會意識到他們創造出有史以來最典雅的鬧鐘。蘋果iPod的鬧鐘就是如此，不但外觀迷人，而且真的把一件事做得非常好。你不必讓自己的團隊為它多開發出什麼額外的功能，就可以讓鬧鐘上市了，而你的團隊還可以開始做下一個專案，做一些能創造出其他價值的東西。</p>

  <h2 id="sigil_toc_id_55" data-cfi="/4/164" class="calibre3">花錢卻一無所獲與免費變更</h2>

  <p data-cfi="/4/166" class="calibre2">在本書的開頭，我曾說過FBI那個「哨兵」專案的故事。如果你還記得的話，某家外包承包商花費數億美元卻打造出一個不管用的軟體。超出預估成本的最大原因在於變更所造成的費用──幾乎所有承包案都是如此，不管是開發電腦軟體、設計飛機或興建大樓。許多承包政府標案的業者其實都是靠著累積變更費用來賺錢，他們會以較低的價格標到專案，因為他們深知自己可以藉由變更費用而獲利。當承包商在為數年計的長期專案簽約，以看似精美的圖表列出所有需求時，發包單位很難不說：「嗯，這樣夠了。」接著，承包商就會說：「我們答應會做這個，還有這個。如果你想提出任何變更，我們會額外收費。」這種事後加錢的收費方式是導致超支的主因，以致於各大企業與機構必須為此設置「變更控管委員會」（Change Control Board）。從成本的角度來說，這麼做是合乎邏輯的，只要限制變更的次數就能限制因而產生的成本。</p>

  <p data-cfi="/4/168" class="calibre2">但這些這麼會算的人沒有料想到的是，這個制度等於是讓人把自己真正需要的東西往外推。他們是在努力節制成本，但是在這麼做的同時也等於限制了學習、創新及創意。假如你在展開一個專案後不久就發現，真正的價值所在，也就是那20%的部分，並不在你所安排的功能中，而是存在於另一批你在工作過程裡才發現的東西裡，這時，傳統的專案管理方法，不但會妨礙你進行變更，也會妨礙你以更快的速度創造價值。</p>

  <p data-cfi="/4/170" class="calibre2">再者，「嚴格控管成本」根本行不通！就算變更控管委員會努力限制變更，變更的需求往往大到無法阻擋，因為假如不做這些變更，專案將無法創造任何價值。因此，變更控管委員會只好心不甘情不願地准許變更，專案的成本也就增加了。接下來就會又有另一個必要的變更，然後再來一個。要不了多久，專案就超支數百萬美元，還會延遲一年、兩年或五年。</p>

  <p data-cfi="/4/172" class="calibre2">所以我才會出「免費變更」的想法，只要在標準的固定價格合約中加注變更免費。把所有你預期的功能一一列出；例如，假如你要打造坦克車，你要的可能是一輛每小時能跑七十五哩、每分鐘開火十輪、有四個座位、有空調等。任何你覺得自己需要的項目。製造商看過需求描述後會說：引擎的製造我會算成100點、裝填裝置我會算成50點、座位算5點，諸如此類，由上至下評估。到最後，每項功能都會有評估點數。根據合約，顧客必須與產品負責人密切合作。在每段衝刺中，他們都可以更改優先順序，任何在待辦事項清單中的項目或功能都可以移到任何其他地方。至於新發現而必須加入的功能呢？沒問題，只要從原本可開發的項目中扣除同等規模的功能即可。你們現在想把雷射導引系統加進去？好，這個項目相當於50點，那就從待辦事項清單的末了，把價值50點的低順位功能移除做為補償。</p>

  <p data-cfi="/4/174" class="calibre2">少數公司已經把這樣的概念運用到新的境界，只提供高價值的產品功能給顧客。幾年前，我曾聽過關於一家Scrum開發商的故事，他們取得一筆1,000萬美元的合約，是要為一家建設公司撰寫軟體。雙方簽訂二十個月後交件，但是Scrum開發商又加入一項條款：建設公司可以任意中止合約，只要支付剩餘合約價值的20%金額即可解約。基本上，只要軟體做出建設公司需要的東西，就能要求Scrum開發商不必再繼續開發。</p>

  <p data-cfi="/4/176" class="calibre2">這家軟體開發商開始設定衝刺期，以一個月為一期。在第一個月結束後，客戶告知開發商新的開發方向，以期創造更多價值。第二個月結束後同樣如此。第三個月結束後，客戶中止合約，收下軟體並開始使用。他們已經得到自己需要的價值了。</p>

  <p data-cfi="/4/178" class="calibre2">現在來做一點簡單的數學計算，看看雙方如何獲益。在合約剛開始的三個月裡，客戶支付給這家Scrum公司150萬美元。為了提早中止合約，他們還必須額外支付剩餘850萬美元中的20%，也就是170萬美元。他們等於支付320萬美元，買到自己原本認為價值1,000萬美元的軟體，而且還提早十七個月收到產品。</p>

  <p data-cfi="/4/180" class="calibre2">同時，贏家不是只有他們。那家取得合約的Scrum公司原本預期的獲利率是15%，但是在前三個月裡只花費130萬美元開發軟體，卻收到320萬美元。獲利率從15%增加到60%，等於變成四倍。而且由於開發人員提早收工，又可以再去標別的案子。這不但是一門好生意，還是能夠及早退休的策略。</p>

  <p data-cfi="/4/182" class="calibre2">他們能做到這樣，是因為Scrum的設計。由於組成跨功能團隊，他們才能很快提升工作速度、在更快的速度下創造更多價值。在每段衝刺結束時，都會有多一部分的產品已完成。這部分是管用的，是馬上就能使用的。在每段衝刺中，產品負責人都能根據顧客的回饋意見重新安排待辦事項清單中的順序。只要已經為顧客創造充分價值，大家就能停工。</p>

  <p data-cfi="/4/184" class="calibre2">Scrum就是這樣讓大家，包括團隊成員、Scrum大師、產品負責人、顧客及公司，都有共同的關注目標。每個人都會朝著同樣的目標、為了同樣的願景而努力：<b data-cfi="/4/184/2" class="calibre14">盡快創造出實際的價值。</b>我非常相信世界上有雙贏這回事，不僅能賺更多錢，又能以更低的成本打造更好的產品，對我來說是很好的一筆交易。</p>

  <h2 id="sigil_toc_id_56" data-cfi="/4/186" class="calibre3">風險</h2>

  <p data-cfi="/4/188" class="calibre2">風險的管理是任何成功事業的要務，而Scrum可以降低你的失敗風險。三種最常見的風險類型是市場風險、技術風險及財務風險；或者換一種方式來說是：別人會想要我們在做的東西嗎？我們實際上能做得出來嗎？做出來的東西賣得出去嗎？</p>

  <p data-cfi="/4/190" class="calibre2">關於<b data-cfi="/4/190/2" class="calibre14">市場風險</b>，我已談過許多。Scrum可以協助你把市場風險最小化，因為它強調一次提出一點成果，可以讓你更快把產品呈現在顧客的面前。而且由於很早就會有回饋意見可供蒐集，產品可以即時做小更動，不必等到你已經投資數百萬美元、意識到你開發的東西並不是顧客真正想要的，才被迫大幅修改。顧客在一開始會告知他們想要什麼，但是事實上有很多人都要等到嘗試過後，才會清楚自己真正要的是什麼。很多商業祕訣只會讓你快速失敗，我比較喜歡設想如何才能更快把東西做出來。</p>

  <p data-cfi="/4/192" class="calibre2"><b data-cfi="/4/192/2" class="calibre14">技術風險</b>很有趣，是否能做出顧客想要的東西是一個棘手的問題，假如你製作的是需要廠房、機具及先期投資的實體產品時更是如此。</p>

  <p data-cfi="/4/194" class="calibre2">還記得那家生產家庭自動化系統的公司嗎？該公司的做法是採用所謂的「多選項式同步工程」，這個名稱的意思是「建立幾種不同原型，並在完整做出來之前看看何者最管用。」例如，業者知道自己要做的是攝影機，好讓顧客能在有人敲門時得知對方是誰、要不要開門讓訪客進入。攝影機最昂貴的部分，也是最需要前置時間的部分是鏡頭。是要做塑膠的、玻璃的，還是水晶的？哪一種適用於任何氣候？哪一種畫質最棒？哪一種容易刮傷？哪一種可以提供最清晰的畫質？不同鏡頭各要多少價錢才能生產？</p>

  <p data-cfi="/4/196" class="calibre2">他們並沒有要求顧客在一開始就做決定，然後全力生產產品，而是先做出三種功能齊全的不同鏡頭讓顧客比較。由於這個舉動只是在解決要選擇哪一種鏡頭的問題，而且因為生產前置時間較長，必須先做這件事，因此他們用筆電攝影機的環境來測試這幾種鏡頭。測試的結果是，玻璃鏡頭最符合評估標準所需。但重要的是，顧客還是要先看看實際已經做出來的一點東西後才能做出判斷。顧客不是根據理論上的產品結構做判斷，而是有實際東西可以觀看與觸摸。處理完這個問題後，就能進入設計外殼、裝設鏡頭及影像處理器的階段了。業者把決定鏡頭一事安排在最優先，可望因此節省數百萬美元。蘋果公司的所有產品就是以這種做法出名，該公司通常會先做出十多種功能完全可用的原型，再來比較哪一種最好。這種做法可以讓不同想法都能迅速展現，又不涉及龐大的投資。</p>

  <p data-cfi="/4/198" class="calibre2"><b data-cfi="/4/198/2" class="calibre14">財務風險</b>是導致大多數企業失敗的原因。這些公司已經做出好東西，但卻無法賣給足夠的顧客，也因而無法賺錢。經典的例子是，網路報紙與傳統報紙之死。當網路在1990年代開始興盛時，報社都很想把報紙的內容放上網路。有些報社的高層判斷，無論是實體報紙或網路報紙都會有人付費購買廣告，於是他們就把內容設定為免費。問題在於，廣告主願意為線上廣告支付的費用遠低於平面廣告的行情，但產出內容的成本卻還是相同。有些報社則試圖為內容築起一道付費的牆，但是免費提供新聞的網站太多了，它們只好被迫跟著照做。要養一批四處採訪新聞的記者很花錢，你可以想像最後的結果就是全美有許多報攤都收掉了。</p>

  <p data-cfi="/4/200" class="calibre2">今天，多數的科技新創公司依然很流行這種「免費提供內容或服務，再靠著廣告賺錢」的模式，創業家們看到臉書或谷歌後會說：「我也做得到。」問題是，市面上根本沒有那麼多的臉書與谷歌。在網路問世的早期，當網路空間首度容許企業鎖定特定顧客區隔時，「超聚焦」確實有它的價值存在。但是，隨著愈來愈多的平台興起而促成這件事後，這種能力就失去價值了。</p>

  <p data-cfi="/4/202" class="calibre2">另一個企業在財務上失敗的原因是，為了得到顧客而付出過多費用。酷朋（Groupon）與Living Social等團購公司就是例子。這兩家公司在剛成立時都輕而易舉地迅速吸收到顧客，但是當它們擴大版圖、建立客流量後，想要吸引新的廣告主與更多願意購買優惠券的顧客，所需要的成本就會愈來愈高。看看這些公司的市值即可知道結果。</p>

  <p data-cfi="/4/204" class="calibre2">Scrum對企業的幫助在於快速回答關鍵問題：我們做這個能賺錢嗎？迅速對顧客釋出有新進展的不同版本，就能知道自己創造的顧客價值何在，以及他們會願意為什麼樣的東西付費。就算你第一次的猜測是錯的，你還是可以調整。你輸掉的頂多就是你投資那幾段衝刺中耗費的時間與精力。相較之下，這總比「耗費數百萬美元打造龐大又複雜的基礎架構，最後才發現別人雖然喜歡你的產品，卻沒有喜歡到願意為那麼昂貴成本付費的地步」來得好。</p>

  <h2 id="sigil_toc_id_57" data-cfi="/4/206" class="calibre3">明天你該做什麼？</h2>

  <p data-cfi="/4/208" class="calibre2">明天你該在自己的工作地點做什麼來推展Scrum？第一步就是擬定待辦事項清單、組成團隊。產品也好，服務也罷，想想你對它所抱持的願景，然後開始把為了實現願景而必須要做的事拆解成小項目，不需要很多，只要一個星期的待辦事項清單就好。等到團隊成員在舉辦每日立會、推展第一段衝刺時，你就可以利用這段時間擬定充足的待辦事項清單，好讓團隊在接下來的兩段衝刺有事可忙。但是，你要隨時盯著待辦事項清單，因為隨著你的團隊作業加速，他們就會開始創造出超乎你想像的東西。</p>

  <p data-cfi="/4/210" class="calibre2">然後，身為產品負責人的你就要製作一張自己認為事情演進的路線圖。你覺得本季能完成什麼？你希望今年的進展到哪裡？重要的是，你必須記住這只不過是你當下的想法而已，無須列得太過詳細，只要預估就好。你不是在為了可行事項擬定有約束力的契約；你只是要確定，你覺得過一段時間後的進展。相信我，情境是會改變的，而且還可能會是大幅改變。</p>

  <p data-cfi="/4/212" class="calibre2">要做出這類規劃的原因是，要在組織裡創造透明度。如果你有一個業務團隊，他們必須知道你們正在進行什麼功能，才能開始做行銷工作。領導階層必須知道營收來自何處、何時會有營收，以及會有多少的營收。重要的訊息是，每件事都是在眾目睽睽下完成的，任何人在任何時候都能看到產品的發展，都能看到每個故事在Scrum板上一路移動到「已完成」。任何人都能繪製故事點與時間的燃盡圖（Burndown Chart），看著這條美好而平穩的曲線朝著零而去，或者說是逐漸消失殆盡。任何人都知道，你們團隊在上一段衝刺中完成多少的故事點、在下一段衝刺中預計完成多少的故事點。任何人都知道，營收與成本就是用以評估身為產品負責人的你的表現。</p>

  <p data-cfi="/4/214" class="calibre2">假如你在一個有多個Scrum團隊的地方工作，你很快就會發現自己必須組成一個產品負責人小組，才能擬定出足夠的待辦事項清單提供工作團隊耕耘。或許你需要一個專門負責策略與顧客互動的產品負責人，以及另一位較偏向戰術面、決定團隊每段衝刺工作內容的產品負責人。</p>

  <p data-cfi="/4/216" class="calibre2">但重要的是你要動手去做，動手就對了！Scrum的設計就是要讓你在幾天內就能啟動一支隊伍。準備好你的待辦事項清單、安排好你的第一段衝刺，然後就可以開始了。你不必花費大把的時間規劃、反省、沉思、陳述使命，或是做為期五年的預測。這些事就留給競爭者去做，就讓他們望塵莫及吧！你何不沿途把世界變得更美好呢？在下一章裡，我就會教你怎麼做。</p>

  <ol class="footnote1" data-cfi="/4/218">
    <li id="fnX-1" data-cfi="/4/218/2" class="calibre8">Shook, John. “The Remarkable Chief Engineer.” Lean Enterprise Institute, February 3, 2009.<a href="#fX-1" data-cfi="/4/218/2/2"><img alt="返回" src="../Images/back.png" data-cfi="/4/218/2/2/2" class="calibre9"/></a></li>

    <li id="fnX-2" data-cfi="/4/218/4" class="calibre8">Ford, Daniel. A Vision So Noble: John Boyd, the OODA Loop, and America's War on Terror (CreateSpace Independent, 2010).<a href="#fX-2" data-cfi="/4/218/4/2"><img alt="返回" src="../Images/back.png" data-cfi="/4/218/4/2/2" class="calibre9"/></a></li>

    <li id="fnX-3" data-cfi="/4/218/6" class="calibre8">Boyd, John. New Conception. 1976.<a href="#fX-3" data-cfi="/4/218/6/2"><img alt="返回" src="../Images/back.png" data-cfi="/4/218/6/2/2" class="calibre9"/></a></li>

    <li id="fnX-4" data-cfi="/4/218/8" class="calibre8">Ibid.<a href="#fX-4" data-cfi="/4/218/8/2"><img alt="返回" src="../Images/back.png" data-cfi="/4/218/8/2/2" class="calibre9"/></a></li>
  </ol>

  <dl data-cfi="/4/220" class="calibre10">
    <dt data-cfi="/4/220/2" class="calibre11">本章重點摘要</dt>

    <dd data-cfi="/4/220/4" class="calibre12">
      <p data-cfi="/4/220/4/2" class="calibre13"><b data-cfi="/4/220/4/2/2" class="calibre14">擬定清單，檢查兩次。</b>建立一份清單，裡面是所有你在專案裡可能做到的事，然後安排優先順序。把最有價值、風險又最低的項目放在待辦事項清單的第一位，再列下一個和下下一個。</p>

      <p data-cfi="/4/220/4/4" class="calibre13"><b data-cfi="/4/220/4/4/2" class="calibre14">產品負責人。</b>負責把願景轉換成待辦事項清單；必須了解案件、市場及顧客。</p>

      <p data-cfi="/4/220/4/6" class="calibre13"><b data-cfi="/4/220/4/6/2" class="calibre14">領導者不是老闆。</b>產品負責人決定必須做的事項與原因，至於該怎麼做、由誰來做則是團隊自己的事。</p>

      <p data-cfi="/4/220/4/8" class="calibre13"><b data-cfi="/4/220/4/8/2" class="calibre14">產品負責人：</b>有專業領域的知識，以及做最終決定的權力。必須讓人找得到發問，以創造價值為己任。</p>

      <p data-cfi="/4/220/4/10" class="calibre13"><b data-cfi="/4/220/4/10/2" class="calibre14">觀察、導向、決定、行動（OODA）。</b>觀看策略情境的全貌，然後迅速採取戰術行動。</p>

      <p data-cfi="/4/220/4/12" class="calibre13"><b data-cfi="/4/220/4/12/2" class="calibre14">恐懼、不確定性及懷疑。</b>主動總比被動好，掌控競爭對手的OODA循環，在他們自亂陣腳時打敗他們。</p>

      <p data-cfi="/4/220/4/14" class="calibre15"><b data-cfi="/4/220/4/14/2" class="calibre14">花錢一無所得，而免費卻能變更。</b>唯有在新事物能帶來價值時才去創造它。要做好心理準備，必要時可能要把它們換成需要同等心力的其他事項。你一開始覺得需要的，從來不會是你實際需要的。</p>
    </dd>
  </dl>
</body>
</html>
